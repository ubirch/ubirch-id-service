include "application.base.conf"

identitySystem {

  server {
    port = ${ID_SVC_HTTP_SERVER_PORT}
    baseUrl = ${ID_SVC_HTTP_SERVER_BASE_URL}
    swaggerPath = ${ID_SVC_HTTP_SWAGGER_PATH}
  }

  tiger {
    kafkaConsumer {
      //Comma-separeted values of IP/Hostname and ports
      bootstrapServers = ${ID_SVC_TIGER_KFC_NODES}
      import = ${ID_SVC_TIGER_KFC_IMPORT_TOPIC}
      activation = ${ID_SVC_TIGER_KFC_ACTIVATION_TOPIC}
      //If empty, a group id will be created.
      groupId = ${ID_SVC_TIGER_KFC_GROUP}
      gracefulTimeout = 2 //In Seconds
      maxPollRecords = ${ID_SVC_TIGER_KFC_MAX_POLL_RECORDS}

      fetchMaxBytesConfig = ${ID_SVC_TIGER_KFC_FETCH_MAX_BYTES_CONFIG}
      maxPartitionFetchBytesConfig = ${ID_SVC_TIGER_KFC_MAX_PARTITION_FETCH_BYTES_CONFIG}
      reconnectBackoffMsConfig = ${ID_SVC_TIGER_KFC_RECONNECT_BACKOFF_MS_CONFIG}
      reconnectBackoffMaxMsConfig = ${ID_SVC_TIGER_KFC_RECONNECT_BACKOFF_MAX_MS_CONFIG}
    }

    kafkaProducer {
      lingerMS = ${ID_SVC_TIGER_KFP_LINGER_MS}
      //Comma-separeted values of IP/Hostname and ports
      bootstrapServers = ${ID_SVC_TIGER_KFP_NODES}
      errorTopic = ${ID_SVC_TIGER_KFC_ERROR_TOPIC}

    }
  }

  wolf {
    kafkaProducer {
      lingerMS = ${ID_SVC_WOLF_KFP_LINGER_MS}
      //Comma-separeted values of IP/Hostname and ports
      bootstrapServers = ${ID_SVC_WOLF_KFP_NODES}
      topic = ${ID_SVC_WOLF_KFP_TOPIC}
      errorTopic = ${ID_SVC_WOLF_KFC_ERROR_TOPIC}

    }
  }

  metrics {
    prometheus {
      port = ${ID_SVC_PROM_HTTP_PORT}
    }
  }

  executionContext {
    threadPoolSize = ${ID_SVC_EXEC_THREAD_POOL_SIZE}
  }

}

cassandra {

  cluster {

    keyspace: ${ID_SVC_CS_KEYSPACE}
    preparedStatementCacheSize: ${ID_SVC_CS_PREPSTM_CACHE}
    //Comma-separeted values of IP/Hostname and ports
    contactPoints: ${ID_SVC_CS_NODES}
    localDataCenter: ${ID_SVC_CS_LOCAL_DATA_CENTER}
    //ANY, ONE, TWO, THREE, QUORUM, ALL, LOCAL_QUORUM, EACH_QUORUM, SERIAL, LOCAL_SERIAL, LOCAL_ONE
    consistencyLevel = ${ID_SVC_CS_CONSISTENCY_LEVEL}
    serialConsistencyLevel = ${ID_SVC_CS_SERIAL_CONSISTENCY_LEVEL}
    withSSL: ${ID_SVC_CS_WITH_SSL}
    username: ${ID_SVC_CS_USERNAME}
    password: ${ID_SVC_CS_PASSWORD}

  }

}
