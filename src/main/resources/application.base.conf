identitySystem {

  name = "identity_system"

  server {
    port = 8081
    baseUrl = ""
    swaggerPath = "src/main/scala/com/ubirch/resources/swagger-ui/"
  }

  cassandra {

    cluster {

      keyspace: "identity_system"
      preparedStatementCacheSize: 1000
      //Comma-separeted values of IP/Hostname and ports
      contactPoints: "localhost:9042"
      //ANY, ONE, TWO, THREE, QUORUM, ALL, LOCAL_QUORUM, EACH_QUORUM, SERIAL, LOCAL_SERIAL, LOCAL_ONE
      consistencyLevel = "LOCAL_ONE"
      serialConsistencyLevel = "SERIAL"
      withSSL: false
      username: ""
      password: ""

    }

  }

  tiger {
    kafkaConsumer {
      //Comma-separeted values of IP/Hostname and ports
      bootstrapServers = "localhost:9092"
      topics = "com.ubirch.identity"
      //If empty, a group id will be created.
      groupId = "identity-system-group"
      gracefulTimeout = 2 //In Seconds
      maxPollRecords = 1000
      metricsSubNamespace = ${identitySystem.name}
      fetchMaxBytesConfig = 52428800
      maxPartitionFetchBytesConfig = 1048576
      reconnectBackoffMsConfig = 50
      reconnectBackoffMaxMsConfig = 1000
    }

    kafkaProducer {
      lingerMS = 600
      //Comma-separeted values of IP/Hostname and ports
      bootstrapServers = "localhost:9092"
      errorTopic = "com.ubirch.identity.error"

    }
  }

  wolf {
    kafkaProducer {
      lingerMS = 600
      //Comma-separeted values of IP/Hostname and ports
      bootstrapServers = "localhost:9092"
      errorTopic = "com.ubirch.identity.error"

    }
  }

  metrics {
    prometheus {
      port = 4321
    }
  }

  executionContext {
    threadPoolSize = 5
  }

}
